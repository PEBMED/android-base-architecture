package com.example.basearch.data.remote.mapper

import com.example.basearch.data.BaseMapper
import com.example.basearch.data.remote.model.RepoPayload
import com.example.basearch.domain.entities.Repo

object RepoRemoteMapper : BaseMapper<RepoPayload, Repo> {
    override fun map(from: RepoPayload) = Repo(
        id = from.id,
        isPrivate = from.isPrivate,
        cloneUrl = from.cloneUrl,
        collaboratorsUrl = from.collaboratorsUrl,
        commentsUrl = from.commentsUrl,
        commitsUrl = from.commitsUrl,
        contributorsUrl = from.contributorsUrl,
        createdAt = from.createdAt,
        defaultBranch = from.defaultBranch,
        deploymentsUrl = from.deploymentsUrl,
        description = from.description,
        disabled = from.disabled,
        downloadsUrl = from.downloadsUrl,
        eventsUrl = from.eventsUrl,
        fork = from.fork,
        forks = from.forks,
        forksCount = from.forksCount,
        forksUrl = from.forksUrl,
        fullName = from.fullName,
        gitCommitsUrl = from.gitCommitsUrl,
        gitRefsUrl = from.gitRefsUrl,
        gitTagsUrl = from.gitTagsUrl,
        gitUrl = from.gitUrl,
        hasDownloads = from.hasDownloads,
        hasIssues = from.hasIssues,
        hasPages = from.hasPages,
        hasProjects = from.hasProjects,
        hasWiki = from.hasWiki,
        homepage = from.homepage,
        hooksUrl = from.hooksUrl,
        htmlUrl = from.htmlUrl,
        issueCommentUrl = from.issueCommentUrl,
        issueEventsUrl = from.issueEventsUrl,
        issuesUrl = from.issuesUrl,
        language = from.language,
        languagesUrl = from.languagesUrl,
        mergesUrl = from.mergesUrl,
        milestonesUrl = from.milestonesUrl,
        name = from.name,
        nodeId = from.nodeId,
        notificationsUrl = from.notificationsUrl,
        openIssues = from.openIssues,
        openIssuesCount = from.openIssuesCount,
        owner = OwnerRemoteMapper.map(from.owner),
        pullsUrl = from.pullsUrl,
        pushedAt = from.pushedAt,
        releasesUrl = from.releasesUrl,
        score = from.score,
        size = from.size,
        teamsUrl = from.teamsUrl,
        treesUrl = from.treesUrl,
        updatedAt = from.updatedAt,
        url = from.url,
        watchers = from.watchers,
        watchersCount = from.watchersCount,
        stargazersCount = from.stargazersCount
    )
}